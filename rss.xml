<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[ヨット逆走JS]]></title><description><![CDATA[技術ブログです。雑食なので色々書いていけたらなと。]]></description><link>https://gagagal.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 11 May 2021 19:18:13 GMT</lastBuildDate><item><title><![CDATA[『テスト駆動開発』まとめ]]></title><description><![CDATA[序章]]></description><link>https://gagagal.github.io/テスト駆動開発/</link><guid isPermaLink="false">https://gagagal.github.io/テスト駆動開発/</guid><pubDate>Tue, 11 May 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h1&gt;序章&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[『ハイパフォーマンスPython』まとめ]]></title><description><![CDATA[序章]]></description><link>https://gagagal.github.io/ハイパフォーマンスPython/</link><guid isPermaLink="false">https://gagagal.github.io/ハイパフォーマンスPython/</guid><pubDate>Wed, 05 May 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h1&gt;序章&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[『熊とワルツを』まとめ]]></title><description><![CDATA[序章]]></description><link>https://gagagal.github.io/熊とワルツを/</link><guid isPermaLink="false">https://gagagal.github.io/熊とワルツを/</guid><pubDate>Tue, 04 May 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h1&gt;序章&lt;/h1&gt;</content:encoded></item><item><title><![CDATA[Laravel + Vue.js によるWebアプリ作成]]></title><description><![CDATA[作りたいもの サーバー:Laravel クライアント:Vue.js 大きな目標とその日時を設定し、それを達成するまでの細かいステップを記入していくとそれらが自動的にスケジューリングされるWeb…]]></description><link>https://gagagal.github.io/2021-03-10/</link><guid isPermaLink="false">https://gagagal.github.io/2021-03-10/</guid><pubDate>Wed, 10 Mar 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h1&gt;作りたいもの&lt;/h1&gt;
&lt;p&gt;サーバー:Laravel&lt;/p&gt;
&lt;p&gt;クライアント:Vue.js&lt;/p&gt;
&lt;p&gt;大きな目標とその日時を設定し、それを達成するまでの細かいステップを記入していくとそれらが自動的にスケジューリングされるWebアプリ。&lt;/p&gt;
&lt;p&gt;ドラッグ&amp;#x26;ドロップでステップは順番を入れ替えることが可能。&lt;/p&gt;
&lt;p&gt;日時が近づく、日時を過ぎるなどのときにはWebPushにて通知をしたい(可能かどうかの調査も含めて行う)。&lt;/p&gt;
&lt;h2&gt;2021/03/02&lt;/h2&gt;
&lt;p&gt;・Githubにリポジトリ作成&lt;/p&gt;
&lt;p&gt;・Laravel導入&lt;/p&gt;
&lt;p&gt;・Laravel Jetstream導入 (コマンドを実行したのみ)&lt;/p&gt;
&lt;h2&gt;2021/03/10&lt;/h2&gt;
&lt;h3&gt;LaravelにVueを導入&lt;/h3&gt;
&lt;p&gt;composerで作ったプロジェクト内で&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;composer require laravel/ui
php artisan ui vue
npm install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;これで完了。
サーバー側で&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;php artisan serve&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;を実行しつつ、フロント側で&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;npm run hot&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で動かしながら修正できる。&lt;/p&gt;
&lt;p&gt;ただし、これはJetstramとバッティングしないか不明(単純にまだ調べていない)。その都度対応する。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[task_kitsune作成日記]]></title><description><![CDATA[使いたい技術 Laravel
Laravel Jetstream
Vue.js
PWA (WebPush) やったこと リポジトリ作成
Laravel導入
Laravel Jetstream導入]]></description><link>https://gagagal.github.io/2021-03-04/</link><guid isPermaLink="false">https://gagagal.github.io/2021-03-04/</guid><pubDate>Thu, 04 Mar 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h1&gt;使いたい技術&lt;/h1&gt;
&lt;p&gt;Laravel
Laravel Jetstream
Vue.js
PWA (WebPush)&lt;/p&gt;
&lt;h1&gt;やったこと&lt;/h1&gt;
&lt;p&gt;リポジトリ作成
Laravel導入
Laravel Jetstream導入&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;composer create-project --prefer-dist laravel/laravel [プロジェクト名]
cd [プロジェクト名]
cp -p .env.example .env // .env書き込み

composer require laravel/jetstream
php artisan jetstream:install livewire
npm install
npm run dev&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[『Linuxプログラミングインタフェース』まとめ Part1]]></title><description><![CDATA[『Linuxプログラミングインタフェース』をまとめていく。 気になった箇所、現在にも応用できそうな箇所を特に記載していくので、全てを書き記すわけではない。 第1章 UNIXの歴史と標準化 Linuxは数あるUNIXオペレーティングシステムの一つ。 第…]]></description><link>https://gagagal.github.io/2021-03-02/</link><guid isPermaLink="false">https://gagagal.github.io/2021-03-02/</guid><pubDate>Tue, 02 Mar 2021 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;『Linuxプログラミングインタフェース』をまとめていく。&lt;br&gt;
気になった箇所、現在にも応用できそうな箇所を特に記載していくので、全てを書き記すわけではない。&lt;/p&gt;
&lt;h1&gt;第1章 UNIXの歴史と標準化&lt;/h1&gt;
&lt;p&gt;Linuxは数あるUNIXオペレーティングシステムの一つ。&lt;/p&gt;
&lt;h1&gt;第2章 基礎概念&lt;/h1&gt;
&lt;h2&gt;オペレーティングシステムのコア：カーネル&lt;/h2&gt;
&lt;p&gt;オペレーティングシステムという用語は2つの意味で使用されることが多い。&lt;br&gt;
・コンピュータの全リソースを管理するソフトウェアに加え、コマンドラインインタプリタ、グラフィカルユーザインタフェース、ファイルユーティリティ、エディタなど、標準的ソフトウェアツールを全て含む&lt;br&gt;
・もっと範囲が狭く、CPU、RAM、デバイスなど、コンピュータの全リソースを管理するソフトウェアのみを指す(&lt;strong&gt;カーネル&lt;/strong&gt;とも呼ぶ)　　&lt;/p&gt;
&lt;h3&gt;カーネルが実行するタスク&lt;/h3&gt;
&lt;p&gt;・&lt;strong&gt;プロセススケジューリング&lt;/strong&gt;…コンピュータは一つ以上のCPUを持ち、プログラム内の命令を実行する。プロセス(&lt;strong&gt;実行状態にあるプログラム&lt;/strong&gt;)を複数同時にメモリ上におき、順にCPUに使用権を与える機能。&lt;/p&gt;
&lt;p&gt;・&lt;strong&gt;メモリ管理&lt;/strong&gt;…&lt;/p&gt;</content:encoded></item><item><title><![CDATA[『リファクタリング』まとめ Part1]]></title><description><![CDATA[マーチン・ファウラー著『リファクタリング プログラミングの体質改善テクニック』をまとめていく。 気になった箇所、現在にも応用できそうな箇所を特に記載していくので、全てを書き記すわけではない。 第…]]></description><link>https://gagagal.github.io/2021-03-01/</link><guid isPermaLink="false">https://gagagal.github.io/2021-03-01/</guid><pubDate>Mon, 01 Mar 2021 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;マーチン・ファウラー著『リファクタリング プログラミングの体質改善テクニック』をまとめていく。&lt;br&gt;
気になった箇所、現在にも応用できそうな箇所を特に記載していくので、全てを書き記すわけではない。&lt;/p&gt;
&lt;h1&gt;第1章  リファクタリング-最初の例&lt;/h1&gt;
&lt;p&gt;実例を交えながらリファクタリングがどういうものか説明している。&lt;br&gt;
&lt;strong&gt;全体を読んだ後に読んだ方が良さそうなので後回し。&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;第2章 リファクタリングの原則&lt;/h1&gt;
&lt;h2&gt;リファクタリングの定義&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;リファクタリング(名詞)&lt;/strong&gt;…外部から見た時の振る舞いを保ちつつ、理解や修正が簡単になるように、ソフトウェアの内部構造を変換させること。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;リファクタリングする(動詞)&lt;/strong&gt;…一連のリファクタリングを行って、外部から見た振る舞いの変更なしに、ソフトウェアを再構築すること。&lt;/p&gt;
&lt;h2&gt;リファクタリングを行う理由&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;・リファクタリングはソフトウェア設計を向上させる&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・リファクタリングはソフトウェアを理解しやすくする&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・リファクタリングはバグを見つけ出す&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・リファクタリングでより早くプログラミングできる&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;いつリファクタリングするべきか&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;・“三度目の法則”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重複や無駄を意識しつつも二度目までならとにかく作業を続けても構わず、三度目に同じようなことをしていると気づいたならばそこでリファクタリングする。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・機能追加時にリファクタリングを行う&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;これから修正しようとしているコードを理解する為、容易に機能追加ができない設計が存在する為&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・バグフィックス時にリファクタリングを行う&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・コードレビューの時にリファクタリングを行う&lt;/strong&gt;&lt;/p&gt;
&lt;h1&gt;第3章 コードの不吉な匂い&lt;/h1&gt;
&lt;p&gt;リファクタリングの必要を示す不吉な兆候&lt;br&gt;
&lt;strong&gt;特に重要な章&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;重複したコード&lt;/h2&gt;
&lt;p&gt;同じようなコードが二箇所以上で見られたら、一箇所にまとめることを考える  &lt;/p&gt;
&lt;p&gt;同一クラス内の複数メソッドに同じ式がある→&lt;strong&gt;メソッドの抽出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;重複したコードが兄弟クラス間に見られる→&lt;strong&gt;メソッドの抽出&lt;/strong&gt;、&lt;strong&gt;メソッドの引き上げ&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;全く関係のない二つのクラス間で重複したコードが見られる→&lt;strong&gt;クラスの抽出&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;長すぎるメソッド&lt;/h2&gt;
&lt;p&gt;間接層を持たせるべき。  &lt;/p&gt;
&lt;p&gt;メソッドを短くしたい→&lt;strong&gt;メソッドの抽出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;引数や一時変数が多すぎるメソッド→&lt;strong&gt;問い合わせによる一時変数の置き換え&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;長い引数リスト→&lt;strong&gt;引数オブジェクトの導入&lt;/strong&gt;、&lt;strong&gt;オブジェクトそのものの受け渡し&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;それでも一時変数や引数が残る→&lt;strong&gt;メソッドオブジェクトによるメソッドの置き換え&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;条件分岐やループ→&lt;strong&gt;条件記述の分解&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;巨大なクラス&lt;/h2&gt;
&lt;p&gt;一つのクラスがあまりに多くの仕事をしている時、たいていインスタンス変数を持ちすぎている。よって重複コードが現れやすい。&lt;/p&gt;
&lt;p&gt;いくつかの変数をまとめる→&lt;strong&gt;クラスの抽出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新しいコンポーネントがサブクラスになりそう→&lt;strong&gt;サブクラスの抽出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;クラスがインスタンス変数を全て使っていない→&lt;strong&gt;クラスの抽出&lt;/strong&gt;、&lt;strong&gt;サブクラスの抽出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;インタフェースの抽出&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;巨大なクラスがGUI部分である→&lt;strong&gt;観察されるデータの複製&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;多すぎる引数&lt;/h2&gt;
&lt;p&gt;既知のオブジェクトに問い合わせてそのデータを一つの引数にしてうけとることが可能→&lt;strong&gt;メソッドによる引数の置き換え&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;オブジェクトそのものの受け渡し&lt;/strong&gt;、&lt;strong&gt;引数オブジェクトの導入&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;変更の発散&lt;/h2&gt;
&lt;p&gt;一つのクラスが互いに独立した理由で同じように変更され、その手順も異なる状態&lt;br&gt;
(例)データベースが新しくなるたびに3つのメソッドを変更しなければならない&lt;/p&gt;
&lt;p&gt;変更理由ごとにクラスをまとめていく→&lt;strong&gt;クラスの抽出&lt;/strong&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[0円で作るGatsby + Github Pagesの静的ブログ 2]]></title><description><![CDATA[今のままだと該当記事に辿り着くのがいずれ大変になってきそうなので、タグ検索機能を追加します。 ・各記事Markdownファイルにタグ項目追加 ・各タグの一覧ページを作る
・ 各記事Markdownファイルにタグ項目追加 各記事のMarkdown…]]></description><link>https://gagagal.github.io/2021-02-26/</link><guid isPermaLink="false">https://gagagal.github.io/2021-02-26/</guid><pubDate>Fri, 26 Feb 2021 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;今のままだと該当記事に辿り着くのがいずれ大変になってきそうなので、タグ検索機能を追加します。&lt;/p&gt;
&lt;p&gt;・各記事Markdownファイルにタグ項目追加&lt;br&gt;
・各タグの一覧ページを作る
・&lt;/p&gt;
&lt;h2&gt;各記事Markdownファイルにタグ項目追加&lt;/h2&gt;
&lt;p&gt;各記事のMarkdownファイルの上部に&lt;strong&gt;frontmatter&lt;/strong&gt;という形式でメタ情報を書き込む箇所があるが、そこにtagsという項目を追加する。 &lt;/p&gt;
&lt;p&gt;今回の記事で言うと&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;---
title: Gatsby + Github Pagesで0円静的ブログ作り 2
date: &amp;quot;2021-02-26T22:12:03.284Z&amp;quot;
description: &amp;quot;このブログにタグ機能を追加する&amp;quot;
tags: [&amp;quot;Gatsby&amp;quot;, &amp;quot;GraphQL&amp;quot;]
---&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のようにする。&lt;/p&gt;
&lt;p&gt;GraqhQLでの&lt;strong&gt;allMarkdownRemark&lt;/strong&gt;と&lt;strong&gt;markdownRemark&lt;/strong&gt;というクエリでMarkdownファイルを取得し、frontmatterのメタ情報はここに含まれる。&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;aidl&quot;&gt;&lt;pre class=&quot;language-aidl&quot;&gt;&lt;code class=&quot;language-aidl&quot;&gt;npm run develop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で &lt;a href=&quot;http://localhost:8000/___graphql&quot;&gt;http://localhost:8000/___graphql&lt;/a&gt; にアクセスすることでGraphQLのクエリを投げた際の挙動を確認できる。&lt;/p&gt;
&lt;h2&gt;各タグの一覧ページを作る&lt;/h2&gt;</content:encoded></item><item><title><![CDATA[Gatsby,GraphQL]]></title><description><![CDATA[Gatsbyについて Gatsbyでのブログの作り方を説明してしまったんで内容は前後しますが、一旦Gatsbyの説明を。   ・Reactベースの静的サイトジェネレーター ・SPAで動く ・内部はGraphQLで動く(データへのインタフェースの一元化)   Gatsby…]]></description><link>https://gagagal.github.io/2021-02-25/</link><guid isPermaLink="false">https://gagagal.github.io/2021-02-25/</guid><pubDate>Thu, 25 Feb 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h2&gt;Gatsbyについて&lt;/h2&gt;
&lt;p&gt;Gatsbyでのブログの作り方を説明してしまったんで内容は前後しますが、一旦Gatsbyの説明を。  &lt;/p&gt;
&lt;p&gt;・Reactベースの静的サイトジェネレーター&lt;br&gt;
・SPAで動く&lt;br&gt;
・内部はGraphQLで動く(データへのインタフェースの一元化)  &lt;/p&gt;
&lt;p&gt;Gatsbyについてはブログ作成中に同時進行で学ぼうとしているので、どんどん追記していきたい。&lt;/p&gt;
&lt;h2&gt;GraphQLについて&lt;/h2&gt;
&lt;p&gt;次はこのブログの記事にタグ検索機能をつけたいので、GraphQLについてもほんの少し。  &lt;/p&gt;
&lt;p&gt;・Facebookが開発しているオープンソースのクエリ言語  &lt;/p&gt;
&lt;p&gt;詳しい使い方は、タグ検索機能を作成する際にでも。&lt;/p&gt;</content:encoded></item><item><title><![CDATA[0円で作るGatsby + Github Pagesの静的ブログ 1]]></title><description><![CDATA[はじめに 作業報告などを他の人の目を考えずにもっと気軽にしたいなと思い、Qiitaとは違う技術ブログを1から作りたいと思って色々調べました。   Reactも勉強したいものの一つだったので、Reactベースで静的ブログを作るGatsbyを採用して、Github Pages…]]></description><link>https://gagagal.github.io/2021-02-24/</link><guid isPermaLink="false">https://gagagal.github.io/2021-02-24/</guid><pubDate>Wed, 24 Feb 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h2&gt;はじめに&lt;/h2&gt;
&lt;p&gt;作業報告などを他の人の目を考えずにもっと気軽にしたいなと思い、Qiitaとは違う技術ブログを1から作りたいと思って色々調べました。  &lt;/p&gt;
&lt;p&gt;Reactも勉強したいものの一つだったので、Reactベースで静的ブログを作るGatsbyを採用して、Github Pagesにて無料で公開することを目指しました。  &lt;/p&gt;
&lt;p&gt;とりあえず一旦はデザインなどを凝らずに、アップすることを第一目標に。&lt;/p&gt;
&lt;h2&gt;いざ作る&lt;/h2&gt;
&lt;p&gt;そもそもGatsby自体がGithub Pagesで公開されるパターンも想定しているので、割りとスムーズに開発できました。  &lt;/p&gt;
&lt;p&gt;まず、&lt;strong&gt;(ユーザー名).github.io&lt;/strong&gt; という名前のリポジトリをGithubで作成し、クローン。  &lt;/p&gt;
&lt;p&gt;そのリポジトリ内で、  &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;aidl&quot;&gt;&lt;pre class=&quot;language-aidl&quot;&gt;&lt;code class=&quot;language-aidl&quot;&gt;npm install -g gatsby-cli
gatsby new blog https://github.com/gatsbyjs/gatsby-starter-blog&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;かなりベーシックながらブログチックで拡張しやすい構成を最初から提示してくれるgatsby-starter-blogを採用。  &lt;/p&gt;
&lt;p&gt;“blog”という名前のディレクトリが作成されますが、この名前は別に何でも大丈夫みたいです。  &lt;/p&gt;
&lt;p&gt;そして、&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;aidl&quot;&gt;&lt;pre class=&quot;language-aidl&quot;&gt;&lt;code class=&quot;language-aidl&quot;&gt;cd blog
npm install --save gh-pages&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;さらに、package.jsonのscriptに&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;aidl&quot;&gt;&lt;pre class=&quot;language-aidl&quot;&gt;&lt;code class=&quot;language-aidl&quot;&gt;&amp;quot;deploy&amp;quot;: &amp;quot;gatsby build &amp;amp;&amp;amp; gh-pages -d public -b master&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;を追記。  &lt;/p&gt;
&lt;p&gt;すると、&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;aidl&quot;&gt;&lt;pre class=&quot;language-aidl&quot;&gt;&lt;code class=&quot;language-aidl&quot;&gt;npm run deploy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;でデプロイ。 &lt;/p&gt;
&lt;p&gt;GithubのリポジトリのSettingからGithub PagesのURLに飛べば、反映されていることが確認できる。  &lt;/p&gt;
&lt;h3&gt;今後やりたいこと&lt;/h3&gt;
&lt;ul&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; タグ機能追加  &lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; デザイン調整  &lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; ページネーション(可能なら)  &lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; ドメイン変更    &lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[初めに]]></title><description><![CDATA[自己紹介 名前：gagagaL 生まれ:1989年10月 SEになって5年目。会社の便利屋のようになっていて、色々な技術に触れてはいるけど自分の中であまり整理できている感触がないので、少しずつでもこちらにまとめていきます。 Qiita…]]></description><link>https://gagagal.github.io/first/</link><guid isPermaLink="false">https://gagagal.github.io/first/</guid><pubDate>Tue, 23 Feb 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h2&gt;自己紹介&lt;/h2&gt;
&lt;p&gt;名前：&lt;strong&gt;gagagaL&lt;/strong&gt;&lt;br&gt;
生まれ:&lt;strong&gt;1989年10月&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SEになって5年目。会社の便利屋のようになっていて、色々な技術に触れてはいるけど自分の中であまり整理できている感触がないので、少しずつでもこちらにまとめていきます。&lt;br&gt;
&lt;a href=&quot;https://qiita.com/DenverIA&quot;&gt;Qiita&lt;/a&gt; ともたまに連携させていく予定。  &lt;/p&gt;
&lt;p&gt;ちなみに、ブログのタイトルは、このブログが偉大なるGatsbyで動いていることに由来します。元ネタがわかった方は友達になりましょう。&lt;/p&gt;
&lt;h2&gt;今年やりたいこと・勉強したいもの・読む本 (随時追加)&lt;/h2&gt;
&lt;ul&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; このブログの整形、デザインの調整&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Django + DeepLearningでアプリ作成&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; OSS参戦&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; バグバウンティ周り勉強(C、C#、Linux、など)&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 統計学勉強、統計検定一級に挑戦&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 1シーズンに1つは重ための記事を書く&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; AWS検定&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; IntelliJ周辺まとめ&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; vim周辺まとめ&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Docker、Kubernetes周辺まとめ&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Python&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Typescript&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Rust&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Go&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; GraphQL&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; WebAssembly&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; PWA&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; React&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Nuxt.js(Vue.js)&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Laravel&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; React Native&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Swift&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; Kotlin&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『リファクタリング』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『レガシーコード改善ガイド』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『エリック・エヴァンスのドメイン駆動設計』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『テスト駆動開発』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『美しき策謀』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『ハッキング・ラボ』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『Linuxプログラミングインタフェース』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『暗号技術の全て』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『パターン認識と機械学習』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『統計的学習の基礎(原文)』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『ハイパフォーマンスPython』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『Fluent Python』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『マスタリングTCP/IP』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『入門Vue.js』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『問題解決のPythonプログラミング』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『実践Metasploit』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; 『熊とワルツを』&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=bx3--22D4E4&quot;&gt;Ben Awadで勉強&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=NlZdVtYVo3E&quot;&gt;Adrian Twarogで勉強&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=JD-age0BPVo&quot;&gt;Tim Ruscicaで勉強&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=PfRWP60qxPM&quot;&gt;Caleb Curryで勉強&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=3IlaxZf3-s8&quot;&gt;Clement Mihailescuで勉強&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=QBICL3jPiAM&quot;&gt;Catalin Pitで勉強&lt;/a&gt;&lt;/li&gt;
&lt;li class=&quot;task-list-item&quot;&gt;&lt;input type=&quot;checkbox&quot; disabled&gt; &lt;a href=&quot;https://www.youtube.com/watch?v=3IlaxZf3-s8&quot;&gt;Clement Mihailescuで勉強&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>